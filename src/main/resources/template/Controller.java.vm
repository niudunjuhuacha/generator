package ${package}.controller;

import java.util.Arrays;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;
import com.baomidou.mybatisplus.plugins.Page;
import com.citms.common.ResultInfo;
import com.citms.common.validator.ValidatorUtils;
import com.citms.common.validator.group.AddGroup;
import com.citms.common.validator.group.UpdateGroup;

import ${package}.entity.${className}Entity;
import ${package}.pojo.api.${className}InfoResp;
import ${package}.pojo.api.${className}SearchReq;
import ${package}.pojo.api.${className}SearchResp;
import ${package}.pojo.api.${className}UpdateOrSaveReq;
import ${package}.service.${className}Service;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;

/**
 * ${comments}
 *
 * @author ${author}
 * @date 2018/10/29
 */
@Api(tags = { "${comments}" })
@RestController
@RequestMapping("/${moduleName}/${pathName}")
public class ${className}Controller {
    @Autowired
    private ${className}Service ${classname}Service;

    /**
     * 条件查询总数
     */
    @RequestMapping(value = "/searchCount", method = RequestMethod.POST)
    @ApiOperation(value = "条件查询，查询总数", notes = "根据查询条件查询${comments}总条数")
    public ResultInfo<Long> searchCount(@RequestBody ${className}SearchReq query) {
        Long count = ${classname}Service.searchCount(query);
        return ResultInfo.success(count, 1, 1);
    }

	/**
	   *条件查询
	*/
	@RequestMapping(value="/search",method=RequestMethod.POST)
	@ApiOperation(value = "条件查询${comments}，分页", notes = "根据查询条件查询${comments}")
	public ResultInfo<List<${className}SearchResp>> search(@RequestBody ${className}SearchReq query){
		Page<${className}SearchResp> page = ${classname}Service.search(query);
		return ResultInfo.successForPage(page.getRecords(),page.getTotal(),page.getPages());
	}

    /**
     * 详情
     */
    @ApiOperation(value = "${comments}详情", notes = "${comments}详情")
	@ApiImplicitParams({ @ApiImplicitParam(paramType = "query", dataType = "String", name = "$pk.attrname", value = "${comments}主键", required = true) })
    @RequestMapping(value="/info",method=RequestMethod.GET)
    public ResultInfo<${className}InfoResp> info($pk.attrType $pk.attrname){
		
    	${className}InfoResp ${classname} = ${classname}Service.info($pk.attrname);
		
		return ResultInfo.success(${classname});
    }

 	/**
     * 保存
     */
    @RequestMapping(value="/save",method=RequestMethod.POST)
    @ApiOperation(value = "保存${comments}", notes = "保存${comments}")
    public ResultInfo<${className}UpdateOrSaveReq> save(@RequestBody ${className}UpdateOrSaveReq ${classname}){
		ValidatorUtils.validateEntity(${classname},AddGroup.class);
		${classname}Service.save(${classname});
        return ResultInfo.success(${classname});
    }

    /**
     * 修改
     */
    @RequestMapping(value="/update",method=RequestMethod.POST)
    @ApiOperation(value = "修改${comments}", notes = "修改${comments}")
    public ResultInfo<${className}UpdateOrSaveReq> update(@RequestBody ${className}UpdateOrSaveReq ${classname}){
		ValidatorUtils.validateEntity(${classname},UpdateGroup.class);
		${classname}Service.update(${classname});
        return ResultInfo.success(${classname});
    }

    /**
     * 删除
     */
    @RequestMapping(value = "/delete",method=RequestMethod.DELETE)
    @ApiOperation(value = "删除${comments}", notes = "删除${comments}")
    public ResultInfo<String[]> delete(@RequestBody String[] ids){
		
    	${classname}Service.deleteBatch(Arrays.asList(ids));
        return ResultInfo.success(ids);
    }

}
